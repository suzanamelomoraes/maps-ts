{"id":"node_modules/@faker-js/faker/lib/word.js","dependencies":[{"name":"/home/suzana/tscourse/maps/package.json","includedInParent":true,"mtime":1643180078900},{"name":"/home/suzana/tscourse/maps/node_modules/@faker-js/faker/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\nexports.__esModule = true;\nexports.Word = void 0;\nvar Word = /** @class */ (function () {\n    function Word(faker) {\n        this.faker = faker;\n        // Bind `this` so namespaced is working correctly\n        for (var _i = 0, _a = Object.getOwnPropertyNames(Word.prototype); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {\n                continue;\n            }\n            this[name_1] = this[name_1].bind(this);\n        }\n    }\n    /**\n     * Returns an adjective of random or optionally specified length.\n     * If specified length is unresolvable, returns random adjective.\n     *\n     * @method faker.word.adjective\n     * @param optional length of word to return\n     * @returns a random adjective\n     */\n    Word.prototype.adjective = function (length) {\n        var wordList = this.faker.definitions.word.adjective;\n        if (length) {\n            wordList = this.faker.definitions.word.adjective.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.adjective));\n    };\n    /**\n     * Returns an adverb of random or optionally specified length.\n     * If specified length is unresolvable, returns random adverb.\n     *\n     * @method faker.word.adverb\n     * @param optional length of word to return\n     * @returns random adverb\n     */\n    Word.prototype.adverb = function (length) {\n        var wordList = this.faker.definitions.word.adverb;\n        if (length) {\n            wordList = this.faker.definitions.word.adverb.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.adverb));\n    };\n    /**\n     * Returns a conjunction of random or optionally specified length.\n     * If specified length is unresolvable, returns random conjunction.\n     *\n     * @method faker.word.conjunction\n     * @param optional length of word to return\n     * @returns random conjunction\n     */\n    Word.prototype.conjunction = function (length) {\n        var wordList = this.faker.definitions.word.conjunction;\n        if (length) {\n            wordList = this.faker.definitions.word.conjunction.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.conjunction));\n    };\n    /**\n     * Returns an interjection of random or optionally specified length.\n     * If specified length is unresolvable, returns random interjection.\n     *\n     * @method faker.word.interjection\n     * @param optional length of word to return\n     * @returns random interjection\n     */\n    Word.prototype.interjection = function (length) {\n        var wordList = this.faker.definitions.word.interjection;\n        if (length) {\n            wordList = this.faker.definitions.word.interjection.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.interjection));\n    };\n    /**\n     * Returns a noun of random or optionally specified length.\n     * If specified length is unresolvable, returns random noun.\n     *\n     * @method faker.word.noun\n     * @param optional length of word to return\n     * @returns random noun\n     */\n    Word.prototype.noun = function (length) {\n        var wordList = this.faker.definitions.word.noun;\n        if (length) {\n            wordList = this.faker.definitions.word.noun.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.noun));\n    };\n    /**\n     * Returns a preposition of random or optionally specified length.\n     * If specified length is unresolvable, returns random preposition.\n     *\n     * @method faker.word.preposition\n     * @param optional length of word to return\n     * @returns random preposition\n     */\n    Word.prototype.preposition = function (length) {\n        var wordList = this.faker.definitions.word.preposition;\n        if (length) {\n            wordList = this.faker.definitions.word.preposition.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.preposition));\n    };\n    /**\n     * Returns a verb of random or optionally specified length.\n     * If specified length is unresolvable, returns random verb.\n     *\n     * @method faker.word.verb\n     * @param optional length of word to return\n     * @returns random verb\n     */\n    Word.prototype.verb = function (length) {\n        var wordList = this.faker.definitions.word.verb;\n        if (length) {\n            wordList = this.faker.definitions.word.verb.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.verb));\n    };\n    return Word;\n}());\nexports.Word = Word;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@faker-js/faker/lib/word.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}}],"sources":{"node_modules/@faker-js/faker/lib/word.js":"\"use strict\";\nexports.__esModule = true;\nexports.Word = void 0;\nvar Word = /** @class */ (function () {\n    function Word(faker) {\n        this.faker = faker;\n        // Bind `this` so namespaced is working correctly\n        for (var _i = 0, _a = Object.getOwnPropertyNames(Word.prototype); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {\n                continue;\n            }\n            this[name_1] = this[name_1].bind(this);\n        }\n    }\n    /**\n     * Returns an adjective of random or optionally specified length.\n     * If specified length is unresolvable, returns random adjective.\n     *\n     * @method faker.word.adjective\n     * @param optional length of word to return\n     * @returns a random adjective\n     */\n    Word.prototype.adjective = function (length) {\n        var wordList = this.faker.definitions.word.adjective;\n        if (length) {\n            wordList = this.faker.definitions.word.adjective.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.adjective));\n    };\n    /**\n     * Returns an adverb of random or optionally specified length.\n     * If specified length is unresolvable, returns random adverb.\n     *\n     * @method faker.word.adverb\n     * @param optional length of word to return\n     * @returns random adverb\n     */\n    Word.prototype.adverb = function (length) {\n        var wordList = this.faker.definitions.word.adverb;\n        if (length) {\n            wordList = this.faker.definitions.word.adverb.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.adverb));\n    };\n    /**\n     * Returns a conjunction of random or optionally specified length.\n     * If specified length is unresolvable, returns random conjunction.\n     *\n     * @method faker.word.conjunction\n     * @param optional length of word to return\n     * @returns random conjunction\n     */\n    Word.prototype.conjunction = function (length) {\n        var wordList = this.faker.definitions.word.conjunction;\n        if (length) {\n            wordList = this.faker.definitions.word.conjunction.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.conjunction));\n    };\n    /**\n     * Returns an interjection of random or optionally specified length.\n     * If specified length is unresolvable, returns random interjection.\n     *\n     * @method faker.word.interjection\n     * @param optional length of word to return\n     * @returns random interjection\n     */\n    Word.prototype.interjection = function (length) {\n        var wordList = this.faker.definitions.word.interjection;\n        if (length) {\n            wordList = this.faker.definitions.word.interjection.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.interjection));\n    };\n    /**\n     * Returns a noun of random or optionally specified length.\n     * If specified length is unresolvable, returns random noun.\n     *\n     * @method faker.word.noun\n     * @param optional length of word to return\n     * @returns random noun\n     */\n    Word.prototype.noun = function (length) {\n        var wordList = this.faker.definitions.word.noun;\n        if (length) {\n            wordList = this.faker.definitions.word.noun.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.noun));\n    };\n    /**\n     * Returns a preposition of random or optionally specified length.\n     * If specified length is unresolvable, returns random preposition.\n     *\n     * @method faker.word.preposition\n     * @param optional length of word to return\n     * @returns random preposition\n     */\n    Word.prototype.preposition = function (length) {\n        var wordList = this.faker.definitions.word.preposition;\n        if (length) {\n            wordList = this.faker.definitions.word.preposition.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.preposition));\n    };\n    /**\n     * Returns a verb of random or optionally specified length.\n     * If specified length is unresolvable, returns random verb.\n     *\n     * @method faker.word.verb\n     * @param optional length of word to return\n     * @returns random verb\n     */\n    Word.prototype.verb = function (length) {\n        var wordList = this.faker.definitions.word.verb;\n        if (length) {\n            wordList = this.faker.definitions.word.verb.filter(function (word) { return word.length == length; });\n        }\n        // If result of filtered word list is undefined, return an element\n        // from the unfiltered list.\n        return (this.faker.random.arrayElement(wordList) ||\n            this.faker.random.arrayElement(this.faker.definitions.word.verb));\n    };\n    return Word;\n}());\nexports.Word = Word;\n"},"lineCount":145}},"error":null,"hash":"45f1243d914cd84b3194e5372b782293","cacheData":{"env":{}}}