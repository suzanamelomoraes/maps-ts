{"id":"node_modules/@faker-js/faker/lib/mersenne.js","dependencies":[{"name":"/home/suzana/tscourse/maps/package.json","includedInParent":true,"mtime":1643011716949},{"name":"/home/suzana/tscourse/maps/node_modules/@faker-js/faker/package.json","includedInParent":true,"mtime":499162500000},{"name":"../vendor/mersenne","loc":{"line":4,"column":18},"parent":"/home/suzana/tscourse/maps/node_modules/@faker-js/faker/lib/mersenne.js","resolved":"/home/suzana/tscourse/maps/node_modules/@faker-js/faker/vendor/mersenne.js"}],"generated":{"js":"\"use strict\";\nexports.__esModule = true;\nexports.Mersenne = void 0;\nvar Gen = require('../vendor/mersenne').MersenneTwister19937;\nvar Mersenne = /** @class */ (function () {\n    function Mersenne() {\n        this.gen = new Gen();\n        this.gen.init_genrand(new Date().getTime() % 1000000000);\n        // Bind `this` so namespaced is working correctly\n        for (var _i = 0, _a = Object.getOwnPropertyNames(Mersenne.prototype); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {\n                continue;\n            }\n            this[name_1] = this[name_1].bind(this);\n        }\n    }\n    Mersenne.prototype.rand = function (max, min) {\n        // TODO @Shinigami92 2022-01-11: This is buggy, cause if min is not passed but only max,\n        // then min will be undefined and this result in NaN for the whole function\n        if (max === undefined) {\n            min = 0;\n            max = 32768;\n        }\n        return Math.floor(this.gen.genrand_real2() * (max - min) + min);\n    };\n    Mersenne.prototype.seed = function (S) {\n        if (typeof S != 'number') {\n            throw new Error('seed(S) must take numeric argument; is ' + typeof S);\n        }\n        this.gen.init_genrand(S);\n    };\n    Mersenne.prototype.seed_array = function (A) {\n        if (typeof A != 'object') {\n            throw new Error('seed_array(A) must take array of numbers; is ' + typeof A);\n        }\n        this.gen.init_by_array(A, A.length);\n    };\n    return Mersenne;\n}());\nexports.Mersenne = Mersenne;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@faker-js/faker/lib/mersenne.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/@faker-js/faker/lib/mersenne.js":"\"use strict\";\nexports.__esModule = true;\nexports.Mersenne = void 0;\nvar Gen = require('../vendor/mersenne').MersenneTwister19937;\nvar Mersenne = /** @class */ (function () {\n    function Mersenne() {\n        this.gen = new Gen();\n        this.gen.init_genrand(new Date().getTime() % 1000000000);\n        // Bind `this` so namespaced is working correctly\n        for (var _i = 0, _a = Object.getOwnPropertyNames(Mersenne.prototype); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            if (name_1 === 'constructor' || typeof this[name_1] !== 'function') {\n                continue;\n            }\n            this[name_1] = this[name_1].bind(this);\n        }\n    }\n    Mersenne.prototype.rand = function (max, min) {\n        // TODO @Shinigami92 2022-01-11: This is buggy, cause if min is not passed but only max,\n        // then min will be undefined and this result in NaN for the whole function\n        if (max === undefined) {\n            min = 0;\n            max = 32768;\n        }\n        return Math.floor(this.gen.genrand_real2() * (max - min) + min);\n    };\n    Mersenne.prototype.seed = function (S) {\n        if (typeof S != 'number') {\n            throw new Error('seed(S) must take numeric argument; is ' + typeof S);\n        }\n        this.gen.init_genrand(S);\n    };\n    Mersenne.prototype.seed_array = function (A) {\n        if (typeof A != 'object') {\n            throw new Error('seed_array(A) must take array of numbers; is ' + typeof A);\n        }\n        this.gen.init_by_array(A, A.length);\n    };\n    return Mersenne;\n}());\nexports.Mersenne = Mersenne;\n"},"lineCount":42}},"error":null,"hash":"e3f5e9d7f570a40e23366a1fb33b1adc","cacheData":{"env":{}}}